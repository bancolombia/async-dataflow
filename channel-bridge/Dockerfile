#===============
# Build Stage
#===============
FROM elixir:1.13.4-alpine as builder

ARG BUILD_ENV=prod
ARG BUILD_REL=channel_bridge_ex

WORKDIR /build

# Copy the source folder into the Docker image
COPY . .

RUN mix local.hex --force

RUN mix local.rebar --force

ENV MIX_ENV=${BUILD_ENV}

# Install dependencies and build Release
RUN mix deps.get && \
    mix release ${BUILD_REL}

# Extract Release archive to /rel for copying in next stage
RUN RELEASE_DIR=`ls -d _build/prod/` && \
    mkdir /export && \
    tar -xf "$RELEASE_DIR/$BUILD_REL-0.0.1.tar.gz" -C /export

#=================
# Runner Stage
#=================
FROM alpine:3.15.4 as runner

ARG BUILD_ENV=prod
ARG BUILD_REL=channel_bridge_ex

RUN apk upgrade --no-cache && \
    apk add --no-cache \
      ncurses-libs \
      libstdc++ \
      libgcc \
      zlib \
      openssl \
      ca-certificates \
      bash

WORKDIR /app

COPY --from=builder /export/ .

EXPOSE 8083

## Configure run environment

#Â We dont want to run it using a full privileged user
# USER #{alpine_user}#

# We want a FQDN in the nodename
ENV RELEASE_DISTRIBUTION="name"

# This value should be overriden at runtime
ENV RELEASE_IP="127.0.0.1"

# This will be the basename of our node
ENV RELEASE_NAME="${BUILD_REL}"

# This will be the full nodename
ENV RELEASE_NODE="${RELEASE_NAME}@${RELEASE_IP}"

# If empty, the default cookie generated by `mix release` will be used
# OVERRIDE IT!!
ENV RELEASE_COOKIE=""

ENTRYPOINT ["/app/bin/channel_bridge_ex"]
CMD ["start"]
