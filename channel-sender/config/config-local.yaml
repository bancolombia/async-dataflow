channel_sender_ex:
  rest_port: 8081
  prometheus_port: 9568
  secret_generator:
    base: "aV4ZPOf7T7HX6GvbhwyBlDM8B9jfeiwi+9qkBnjXxUZXqAeTrehojWKHkV3U0kGc"
    salt: "socket auth"
    # Max time (in seconds) for a token to be valid
    max_age: 900
  
  # initial time in milliseconds to wait before re-send a message not acked to a channel
  initial_redelivery_time: 1200

  # Allowed max number of retries to re-send unack'ed message to a channel
  max_unacknowledged_retries: 15

  no_start: false
  topology:
    strategy: Elixir.Cluster.Strategy.Gossip # for local development

  api_gateway:
    # 
    # @connections endpoint for api gateway when using custom domain, put the fully qualified name ex: myapi.com
    #domain: myapi.com
    # endpoint: "http://localhost:3000/@connections/"
    # if not using custom domain or endpoint, provide the api id to set up the default endpoint
    api: "5nn096u8h6"
    region: "us-east-1"
    stage: "dev"
    #-----
    # Http client to the @connections endpoint configuration. See https://hexdocs.pm/finch/Finch.html#start_link/1-pool-configuration-options
    #-----
    adapter:
      # Number of connection pools to start (HTTP 1.1)
      count: 1
      # Number of connections to maintain in each pool. The default is 50. (HTTP 1.1)
      size: 50 
      # The maximum number of milliseconds an HTTP1 connection is allowed to be idle
      conn_max_idle_time: 60000
      # The maximum number of milliseconds that a pool can be idle before being terminated, used only by HTTP1 pools
      pool_max_idle_time: 60000

  # strategy: Elixir.Cluster.Strategy.Kubernetes # topology for kubernetes
  # config: 
  #   mode: :hostname
  #   kubernetes_ip_lookup_mode: :pods
  #   kubernetes_service_name: "adfsender-headless"
  #   kubernetes_node_basename: "channel_sender_ex"
  #   kubernetes_selector: "cluster=beam"
  #   namespace: "sendernm"
  #   polling_interval: 5000

    # see https://github.com/bancolombia/async-dataflow/tree/master/channel-sender/deploy_samples/k8s
    # for more information about the kubernetes configuration with libcluser

  # Number of workers to process the requests (Poolboy configuration)
  channel_worker_pool:
    size: 120
    max_overflow: 50

  persistence:
    enabled: true # Indicates if the persistence layer is enabled
    type: :redis # Indicates the type of persistence layer
    ttl: 900 # Time to live of the messages (seconds) in the persistence layer (after each write operation)
    config:
      ssl: false # Indicates if the connection to the persistence layer is encrypted
      host: "localhost" # Host of the persistence layer
      hostread: "localhost" # Host of the persistence layer for read operations
      pool_size: 1 # Number of connections to the persistence layer (aplies to read/write connections)
      port: 6379 # Port of the persistence layer
    #   username: nil # Username to connect to the persistence layer
    #   password: nil # Password to connect to the persistence layer
      # secret: "redis-secret" # Secret to connect to the persistence layer secret can be json like: {"username": "", "password": "", "host": "", "hostread", "port": 0, "ssl": false}
      # if secret is provided, the other fields can be overwritten by the secret but only if there are present in the secret

logger:
  level: debug



